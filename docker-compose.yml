services:
  backend:
    image: node:18-alpine
    container_name: node_backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true  # Ensures reliable hot reload with nodemon
    command: ["sh", "-c", "npm install && npm run dev"]
    depends_on:
      - mongo
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    image: node:18
    container_name: react_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:3000"
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true  # Ensures hot reload for your React dev server (e.g., Vite or CRA)
    command: bash -c "npm install && npm start"
    depends_on:
      - backend

  mongo:
    image: mongo:latest
    container_name: mongodb_service
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_service
    ports:
      - "6379:6379"
    command: ["redis-server"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mongo-data: